plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4' // usei uma versão estável mais recente
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.graalvm.buildtools.native' version '0.10.6'
}

group = 'com.elizgoj.hexagonal'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot core (inclui suporte a beans, eventos, etc.)
    implementation 'org.springframework.boot:spring-boot-starter'

    // Controller REST (Web layer)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // JPA para persistência (porta de saída típica)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Banco de dados H2 (apenas para testes ou dev, pode trocar por PostgreSQL, MySQL etc.)
    runtimeOnly 'com.h2database:h2'

    // Lombok para evitar boilerplate
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring DevTools para hot reload no dev
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Validação com javax.validation (para @Valid)
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // ModelMapper (opcional: para mapear DTO <-> entidade)
    implementation 'org.modelmapper:modelmapper:3.2.0'

    // Testes
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.11.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    runtimeOnly 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}
